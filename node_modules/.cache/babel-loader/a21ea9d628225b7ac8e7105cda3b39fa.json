{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectNerd\\\\to-do-list\\\\src\\\\Components\\\\TodoList\\\\todoListCount\\\\TodoListCountDesktop.js\",\n    _s = $RefreshSig$();\n\n//This is a child of TodoList.js \n//which duty is counting the number of task left\n//And show some filter to filter the task as the user want\n//This is for desktop version\nimport { selectLengthCount, deleteCompleted } from \"../../Todo/todoSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onCompleted, onAll, onActive, selectOnShowState } from \"./todoListShowSlice\";\nimport { selectAppColorChange } from \"../../App/appColorChangeSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoListCount = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const showState = useSelector(selectOnShowState);\n  const remainTask = useSelector(selectLengthCount);\n  const backgroundState = useSelector(selectAppColorChange);\n\n  const deleteCompletedTask = () => {\n    dispatch(deleteCompleted());\n  };\n\n  const selectAll = () => {\n    dispatch(onAll());\n  };\n\n  const selectActive = () => {\n    dispatch(onActive());\n  };\n\n  const selectCompleted = () => {\n    dispatch(onCompleted());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: !backgroundState ? \"todoListCount dark-mode\" : \"todoListCount\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"gray\",\n      children: [remainTask, \" items left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showTodoDesktop\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: selectAll,\n        className: showState.mode === \"all\" ? \"gray selectBtn selected\" : \"gray selectBtn\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: selectActive,\n        className: showState.mode === \"active\" ? \"gray selectBtn selected\" : \"gray selectBtn\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: selectCompleted,\n        className: showState.mode === \"completed\" ? \"gray selectBtn selected\" : \"gray selectBtn\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"gray selectBtn\",\n      onClick: deleteCompletedTask,\n      children: \"Clear Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoListCount, \"e7ztkw+LB36CpidK4n3giG3HOJA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = TodoListCount;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListCount\");","map":{"version":3,"names":["selectLengthCount","deleteCompleted","useDispatch","useSelector","onCompleted","onAll","onActive","selectOnShowState","selectAppColorChange","TodoListCount","dispatch","showState","remainTask","backgroundState","deleteCompletedTask","selectAll","selectActive","selectCompleted","mode"],"sources":["D:/projectNerd/to-do-list/src/Components/TodoList/todoListCount/TodoListCountDesktop.js"],"sourcesContent":["//This is a child of TodoList.js \r\n//which duty is counting the number of task left\r\n//And show some filter to filter the task as the user want\r\n//This is for desktop version\r\nimport { selectLengthCount, deleteCompleted } from \"../../Todo/todoSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { onCompleted, onAll, onActive, selectOnShowState } from \"./todoListShowSlice\";\r\nimport { selectAppColorChange } from \"../../App/appColorChangeSlice\";\r\n\r\nexport const TodoListCount = () => {\r\n    const dispatch = useDispatch();\r\n    const showState = useSelector(selectOnShowState);\r\n    const remainTask = useSelector(selectLengthCount);\r\n    const backgroundState = useSelector(selectAppColorChange);\r\n\r\n    const deleteCompletedTask = () => {\r\n        dispatch(deleteCompleted());\r\n    }\r\n\r\n    const selectAll = () => {\r\n        dispatch(onAll());\r\n    }\r\n\r\n    const selectActive = () => {\r\n        dispatch(onActive());\r\n    }\r\n\r\n    const selectCompleted = () => {\r\n        dispatch(onCompleted());\r\n    }\r\n\r\n    return (\r\n        <div className={!backgroundState ? \"todoListCount dark-mode\" : \"todoListCount\"}>\r\n            <p className=\"gray\">{remainTask} items left</p>\r\n            <div className=\"showTodoDesktop\">\r\n                <p onClick={selectAll} className={showState.mode === \"all\" ? \"gray selectBtn selected\" : \"gray selectBtn\"}>All</p>\r\n                <p onClick={selectActive} className={showState.mode === \"active\" ? \"gray selectBtn selected\" : \"gray selectBtn\"}>Active</p>\r\n                <p onClick={selectCompleted} className={showState.mode === \"completed\" ? \"gray selectBtn selected\" : \"gray selectBtn\"}>Completed</p>\r\n            </div>\r\n            <p className=\"gray selectBtn\" onClick={deleteCompletedTask}>Clear Completed</p>\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAT,EAA4BC,eAA5B,QAAmD,sBAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,iBAAvC,QAAgE,qBAAhE;AACA,SAASC,oBAAT,QAAqC,+BAArC;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC/B,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,SAAS,GAAGR,WAAW,CAACI,iBAAD,CAA7B;EACA,MAAMK,UAAU,GAAGT,WAAW,CAACH,iBAAD,CAA9B;EACA,MAAMa,eAAe,GAAGV,WAAW,CAACK,oBAAD,CAAnC;;EAEA,MAAMM,mBAAmB,GAAG,MAAM;IAC9BJ,QAAQ,CAACT,eAAe,EAAhB,CAAR;EACH,CAFD;;EAIA,MAAMc,SAAS,GAAG,MAAM;IACpBL,QAAQ,CAACL,KAAK,EAAN,CAAR;EACH,CAFD;;EAIA,MAAMW,YAAY,GAAG,MAAM;IACvBN,QAAQ,CAACJ,QAAQ,EAAT,CAAR;EACH,CAFD;;EAIA,MAAMW,eAAe,GAAG,MAAM;IAC1BP,QAAQ,CAACN,WAAW,EAAZ,CAAR;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAE,CAACS,eAAD,GAAmB,yBAAnB,GAA+C,eAA/D;IAAA,wBACI;MAAG,SAAS,EAAC,MAAb;MAAA,WAAqBD,UAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACI;QAAG,OAAO,EAAEG,SAAZ;QAAuB,SAAS,EAAEJ,SAAS,CAACO,IAAV,KAAmB,KAAnB,GAA2B,yBAA3B,GAAuD,gBAAzF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAG,OAAO,EAAEF,YAAZ;QAA0B,SAAS,EAAEL,SAAS,CAACO,IAAV,KAAmB,QAAnB,GAA8B,yBAA9B,GAA0D,gBAA/F;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAG,OAAO,EAAED,eAAZ;QAA6B,SAAS,EAAEN,SAAS,CAACO,IAAV,KAAmB,WAAnB,GAAiC,yBAAjC,GAA6D,gBAArG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAOI;MAAG,SAAS,EAAC,gBAAb;MAA8B,OAAO,EAAEJ,mBAAvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAjCM;;GAAML,a;UACQP,W,EACCC,W,EACCA,W,EACKA,W;;;KAJfM,a"},"metadata":{},"sourceType":"module"}