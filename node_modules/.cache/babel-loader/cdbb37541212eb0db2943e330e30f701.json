{"ast":null,"code":"//This file will store all the state of todo list\n//Daily life mission or sth else you want to type in or include in\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const selectTodoList = state => state.todoCreator;\nexport const selectLengthCount = state => state.todoCreator.length; // export const selectDoneChecking = state\n\nconst todoCreatorSlice = createSlice({\n  name: \"todoCreator\",\n  initialState: [],\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    stateChangeTodo: (state, action) => {\n      state = state.map(todo => {\n        if (todo.id === action.payload) {\n          todo.done = todo.done ? false : true;\n        }\n      });\n    },\n    deleteCompleted: state => state.filter(todo => todo.done === false)\n  }\n});\nexport const {\n  addTodo,\n  stateChangeTodo,\n  deleteCompleted\n} = todoCreatorSlice.actions;\nexport default todoCreatorSlice.reducer;","map":{"version":3,"names":["createSlice","selectTodoList","state","todoCreator","selectLengthCount","length","todoCreatorSlice","name","initialState","reducers","addTodo","action","push","payload","stateChangeTodo","map","todo","id","done","deleteCompleted","filter","actions","reducer"],"sources":["D:/projectNerd/to-do-list/src/Components/Todo/todoSlice.js"],"sourcesContent":["//This file will store all the state of todo list\r\n//Daily life mission or sth else you want to type in or include in\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const selectTodoList = state => state.todoCreator;\r\nexport const selectLengthCount = state => state.todoCreator.length;\r\n// export const selectDoneChecking = state\r\n\r\nconst todoCreatorSlice = createSlice({\r\n    name: \"todoCreator\",\r\n    initialState: [],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            state.push(action.payload);\r\n        },\r\n        stateChangeTodo: (state, action) => {\r\n            state = state.map(todo => {\r\n                if(todo.id === action.payload) {\r\n                    todo.done = todo.done ? false : true;\r\n                }\r\n            });\r\n        },\r\n        deleteCompleted: state => state.filter(todo => todo.done === false)\r\n    }\r\n})\r\n\r\nexport const { addTodo, stateChangeTodo, deleteCompleted } = todoCreatorSlice.actions;\r\nexport default todoCreatorSlice.reducer;"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAIA,KAAK,CAACC,WAAtC;AACP,OAAO,MAAMC,iBAAiB,GAAGF,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBE,MAArD,C,CACP;;AAEA,MAAMC,gBAAgB,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,aAD2B;EAEjCC,YAAY,EAAE,EAFmB;EAGjCC,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACR,KAAD,EAAQS,MAAR,KAAmB;MACxBT,KAAK,CAACU,IAAN,CAAWD,MAAM,CAACE,OAAlB;IACH,CAHK;IAINC,eAAe,EAAE,CAACZ,KAAD,EAAQS,MAAR,KAAmB;MAChCT,KAAK,GAAGA,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAI;QACtB,IAAGA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAtB,EAA+B;UAC3BG,IAAI,CAACE,IAAL,GAAYF,IAAI,CAACE,IAAL,GAAY,KAAZ,GAAoB,IAAhC;QACH;MACJ,CAJO,CAAR;IAKH,CAVK;IAWNC,eAAe,EAAEjB,KAAK,IAAIA,KAAK,CAACkB,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACE,IAAL,KAAc,KAAnC;EAXpB;AAHuB,CAAD,CAApC;AAkBA,OAAO,MAAM;EAAER,OAAF;EAAWI,eAAX;EAA4BK;AAA5B,IAAgDb,gBAAgB,CAACe,OAAvE;AACP,eAAef,gBAAgB,CAACgB,OAAhC"},"metadata":{},"sourceType":"module"}