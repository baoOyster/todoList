{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectNerd\\\\to-do-list\\\\src\\\\Components\\\\TodoList\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTodoList, stateChangeTodo } from \"../Todo/todoSlice\";\nimport Box from \"../../images/circle-regular.svg\";\nimport BoxDone from \"../../images/circle-check-regular.svg\";\nimport './TodoList.css';\nimport { TodoListCount } from \"./todoListCount/TodoListCount\";\nimport { selectOnShowState } from \"./todoListCount/todoListShowSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoList() {\n  _s();\n\n  const todoList = useSelector(selectTodoList);\n  const stateMode = useSelector(selectOnShowState);\n  const dispatch = useDispatch();\n  let key = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoList todoTask\",\n    children: [stateMode.mode === \"all\" && todoList.map(task => {\n      key += 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-check\",\n        onClick: () => {\n          dispatch(stateChangeTodo(task.id));\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.done ? BoxDone : Box,\n          alt: \"Tick Box\",\n          className: \"button-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: task.done ? \"mission missionDone\" : \"mission\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, `task${key}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this);\n    }), stateMode.mode === \"active\" && todoList.map(task => {\n      if (task.done === false) {\n        key += 1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-check\",\n          onClick: () => {\n            dispatch(stateChangeTodo(task.id));\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.done ? BoxDone : Box,\n            alt: \"Tick Box\",\n            className: \"button-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: task.done ? \"mission missionDone\" : \"mission\",\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, `task${key}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this);\n      }\n    }), stateMode.mode === \"completed\" && todoList.map(task => {\n      if (task.done === false) {\n        key += 1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-check\",\n          onClick: () => {\n            dispatch(stateChangeTodo(task.id));\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.done ? BoxDone : Box,\n            alt: \"Tick Box\",\n            className: \"button-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: task.done ? \"mission missionDone\" : \"mission\",\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, `task${key}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(TodoListCount, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"ix3e8tgRULsVclJewZvOKcGztwU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useSelector","useDispatch","selectTodoList","stateChangeTodo","Box","BoxDone","TodoListCount","selectOnShowState","TodoList","todoList","stateMode","dispatch","key","mode","map","task","id","done","text"],"sources":["D:/projectNerd/to-do-list/src/Components/TodoList/TodoList.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTodoList, stateChangeTodo } from \"../Todo/todoSlice\";\r\nimport Box from \"../../images/circle-regular.svg\";\r\nimport BoxDone from \"../../images/circle-check-regular.svg\";\r\nimport './TodoList.css';\r\nimport { TodoListCount } from \"./todoListCount/TodoListCount\";\r\nimport { selectOnShowState } from \"./todoListCount/todoListShowSlice\";\r\n\r\nexport function TodoList(){\r\n    const todoList = useSelector(selectTodoList);\r\n    const stateMode = useSelector(selectOnShowState)\r\n    const dispatch = useDispatch();\r\n\r\n    let key = 0\r\n    return (\r\n        <div className=\"todoList todoTask\">\r\n            {stateMode.mode === \"all\" && todoList.map(task => {\r\n                key += 1;\r\n                return(\r\n                <div className=\"todo-check\" \r\n                key={`task${key}`}\r\n                onClick={() => {\r\n                    dispatch(stateChangeTodo(task.id))\r\n                }}>\r\n                    <img src={task.done ? BoxDone : Box} alt=\"Tick Box\"  \r\n                    className=\"button-check\"\r\n                    />\r\n                    <p className={task.done ? \"mission missionDone\" : \"mission\"}>{task.text}</p>\r\n                </div>\r\n                )\r\n            }\r\n            )}\r\n            {stateMode.mode === \"active\" && todoList.map(task => {\r\n                if(task.done === false){\r\n                    key += 1;\r\n                    return(\r\n                    <div className=\"todo-check\" \r\n                    key={`task${key}`}\r\n                    onClick={() => {\r\n                        dispatch(stateChangeTodo(task.id))\r\n                    }}>\r\n                        <img src={task.done ? BoxDone : Box} alt=\"Tick Box\"  \r\n                        className=\"button-check\"\r\n                        />\r\n                        <p className={task.done ? \"mission missionDone\" : \"mission\"}>{task.text}</p>\r\n                    </div>\r\n                    )\r\n                }\r\n            }\r\n            )}\r\n            {stateMode.mode === \"completed\" && todoList.map(task => {\r\n                if(task.done === false){\r\n                    key += 1;\r\n                    return(\r\n                    <div className=\"todo-check\" \r\n                    key={`task${key}`}\r\n                    onClick={() => {\r\n                        dispatch(stateChangeTodo(task.id))\r\n                    }}>\r\n                        <img src={task.done ? BoxDone : Box} alt=\"Tick Box\"  \r\n                        className=\"button-check\"\r\n                        />\r\n                        <p className={task.done ? \"mission missionDone\" : \"mission\"}>{task.text}</p>\r\n                    </div>\r\n                    )\r\n                }\r\n            }\r\n            )}\r\n            <TodoListCount />\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,mBAAhD;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAO,gBAAP;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,iBAAT,QAAkC,mCAAlC;;AAEA,OAAO,SAASC,QAAT,GAAmB;EAAA;;EACtB,MAAMC,QAAQ,GAAGT,WAAW,CAACE,cAAD,CAA5B;EACA,MAAMQ,SAAS,GAAGV,WAAW,CAACO,iBAAD,CAA7B;EACA,MAAMI,QAAQ,GAAGV,WAAW,EAA5B;EAEA,IAAIW,GAAG,GAAG,CAAV;EACA,oBACI;IAAK,SAAS,EAAC,mBAAf;IAAA,WACKF,SAAS,CAACG,IAAV,KAAmB,KAAnB,IAA4BJ,QAAQ,CAACK,GAAT,CAAaC,IAAI,IAAI;MAC9CH,GAAG,IAAI,CAAP;MACA,oBACA;QAAK,SAAS,EAAC,YAAf;QAEA,OAAO,EAAE,MAAM;UACXD,QAAQ,CAACR,eAAe,CAACY,IAAI,CAACC,EAAN,CAAhB,CAAR;QACH,CAJD;QAAA,wBAKI;UAAK,GAAG,EAAED,IAAI,CAACE,IAAL,GAAYZ,OAAZ,GAAsBD,GAAhC;UAAqC,GAAG,EAAC,UAAzC;UACA,SAAS,EAAC;QADV;UAAA;UAAA;UAAA;QAAA,QALJ,eAQI;UAAG,SAAS,EAAEW,IAAI,CAACE,IAAL,GAAY,qBAAZ,GAAoC,SAAlD;UAAA,UAA8DF,IAAI,CAACG;QAAnE;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA,GACM,OAAMN,GAAI,EADhB;QAAA;QAAA;QAAA;MAAA,QADA;IAYH,CAd4B,CADjC,EAiBKF,SAAS,CAACG,IAAV,KAAmB,QAAnB,IAA+BJ,QAAQ,CAACK,GAAT,CAAaC,IAAI,IAAI;MACjD,IAAGA,IAAI,CAACE,IAAL,KAAc,KAAjB,EAAuB;QACnBL,GAAG,IAAI,CAAP;QACA,oBACA;UAAK,SAAS,EAAC,YAAf;UAEA,OAAO,EAAE,MAAM;YACXD,QAAQ,CAACR,eAAe,CAACY,IAAI,CAACC,EAAN,CAAhB,CAAR;UACH,CAJD;UAAA,wBAKI;YAAK,GAAG,EAAED,IAAI,CAACE,IAAL,GAAYZ,OAAZ,GAAsBD,GAAhC;YAAqC,GAAG,EAAC,UAAzC;YACA,SAAS,EAAC;UADV;YAAA;YAAA;YAAA;UAAA,QALJ,eAQI;YAAG,SAAS,EAAEW,IAAI,CAACE,IAAL,GAAY,qBAAZ,GAAoC,SAAlD;YAAA,UAA8DF,IAAI,CAACG;UAAnE;YAAA;YAAA;YAAA;UAAA,QARJ;QAAA,GACM,OAAMN,GAAI,EADhB;UAAA;UAAA;UAAA;QAAA,QADA;MAYH;IACJ,CAhB+B,CAjBpC,EAmCKF,SAAS,CAACG,IAAV,KAAmB,WAAnB,IAAkCJ,QAAQ,CAACK,GAAT,CAAaC,IAAI,IAAI;MACpD,IAAGA,IAAI,CAACE,IAAL,KAAc,KAAjB,EAAuB;QACnBL,GAAG,IAAI,CAAP;QACA,oBACA;UAAK,SAAS,EAAC,YAAf;UAEA,OAAO,EAAE,MAAM;YACXD,QAAQ,CAACR,eAAe,CAACY,IAAI,CAACC,EAAN,CAAhB,CAAR;UACH,CAJD;UAAA,wBAKI;YAAK,GAAG,EAAED,IAAI,CAACE,IAAL,GAAYZ,OAAZ,GAAsBD,GAAhC;YAAqC,GAAG,EAAC,UAAzC;YACA,SAAS,EAAC;UADV;YAAA;YAAA;YAAA;UAAA,QALJ,eAQI;YAAG,SAAS,EAAEW,IAAI,CAACE,IAAL,GAAY,qBAAZ,GAAoC,SAAlD;YAAA,UAA8DF,IAAI,CAACG;UAAnE;YAAA;YAAA;YAAA;UAAA,QARJ;QAAA,GACM,OAAMN,GAAI,EADhB;UAAA;UAAA;UAAA;QAAA,QADA;MAYH;IACJ,CAhBkC,CAnCvC,eAqDI,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QArDJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyDH;;GA/DeJ,Q;UACKR,W,EACCA,W,EACDC,W;;;KAHLO,Q"},"metadata":{},"sourceType":"module"}