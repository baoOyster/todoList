{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectNerd\\\\to-do-list\\\\src\\\\Components\\\\TodoList\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTodoList, stateChangeTodo } from \"../Todo/todoSlice\";\nimport Box from \"../../images/circle-regular.svg\";\nimport BoxDone from \"../../images/circle-check-regular.svg\";\nimport './TodoList.css';\nimport { TodoListCount } from \"./todoListCount/TodoListCountDesktop\";\nimport { selectOnShowState } from \"./todoListCount/todoListShowSlice\";\nimport { selectAppColorChange } from \"../App/appColorChangeSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoList() {\n  _s();\n\n  const todoList = useSelector(selectTodoList);\n  const stateMode = useSelector(selectOnShowState);\n  const dispatch = useDispatch();\n  const missionList = document.getElementById('missionList');\n  const missionDones = document.querySelectorAll('.missionDone');\n  const tasks = document.querySelectorAll('.todo-check');\n  const backgroundState = useSelector(selectAppColorChange);\n\n  const changeBackgroundState = async () => {\n    if (backgroundState) {\n      missionList.style.backgroundColor = '#fff';\n      missionList.style.color = \"black\";\n      tasks.forEach(task => {\n        task.style.backgroundColor = \"#fff\";\n        task.style.color = \"black\";\n      });\n    } else {\n      missionList.style.backgroundColor = 'hsl(235, 24%, 19%)';\n      missionList.style.color = \"#fff\";\n      tasks.forEach(task => {\n        task.style.backgroundColor = \"hsl(235, 24%, 19%)\";\n        task.style.color = \"#fff\";\n      });\n    }\n  };\n\n  changeBackgroundState();\n  let key = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoList todoTask\",\n    id: \"missionList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskList\",\n      children: [stateMode.mode === \"all\" && todoList.map(task => {\n        key += 1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-check fixBorder\",\n          onClick: () => {\n            dispatch(stateChangeTodo(task.id));\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.done ? BoxDone : Box,\n            alt: \"Tick Box\",\n            className: \"button-check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: task.done ? \"mission missionDone\" : \"mission\",\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, `task${key}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this);\n      }), stateMode.mode === \"active\" && todoList.map(task => {\n        if (task.done === false) {\n          key += 1;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-check fixBorder\",\n            onClick: () => {\n              dispatch(stateChangeTodo(task.id));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: task.done ? BoxDone : Box,\n              alt: \"Tick Box\",\n              className: \"button-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: task.done ? \"mission missionDone\" : \"mission\",\n              children: task.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, `task${key}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this);\n        }\n      }), stateMode.mode === \"completed\" && todoList.map(task => {\n        if (task.done) {\n          key += 1;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-check fixBorder\",\n            onClick: () => {\n              dispatch(stateChangeTodo(task.id));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: task.done ? BoxDone : Box,\n              alt: \"Tick Box\",\n              className: \"button-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: task.done ? \"mission missionDone\" : \"mission\",\n              children: task.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, `task${key}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoListCount, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"5MLfycaUXWOxb/hS8812lD5MV28=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useSelector","useDispatch","selectTodoList","stateChangeTodo","Box","BoxDone","TodoListCount","selectOnShowState","selectAppColorChange","TodoList","todoList","stateMode","dispatch","missionList","document","getElementById","missionDones","querySelectorAll","tasks","backgroundState","changeBackgroundState","style","backgroundColor","color","forEach","task","key","mode","map","id","done","text"],"sources":["D:/projectNerd/to-do-list/src/Components/TodoList/TodoList.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTodoList, stateChangeTodo } from \"../Todo/todoSlice\";\r\nimport Box from \"../../images/circle-regular.svg\";\r\nimport BoxDone from \"../../images/circle-check-regular.svg\";\r\nimport './TodoList.css';\r\nimport { TodoListCount } from \"./todoListCount/TodoListCountDesktop\";\r\nimport { selectOnShowState } from \"./todoListCount/todoListShowSlice\";\r\nimport { selectAppColorChange } from \"../App/appColorChangeSlice\";\r\n\r\nexport function TodoList(){\r\n    const todoList = useSelector(selectTodoList);\r\n    const stateMode = useSelector(selectOnShowState)\r\n    const dispatch = useDispatch();\r\n\r\n    const missionList = document.getElementById('missionList');\r\n    const missionDones= document.querySelectorAll('.missionDone');\r\n    const tasks = document.querySelectorAll('.todo-check');\r\n    const backgroundState = useSelector(selectAppColorChange);\r\n    const changeBackgroundState = async () => {\r\n        if(backgroundState){\r\n            missionList.style.backgroundColor = '#fff';\r\n            missionList.style.color = \"black\";\r\n            tasks.forEach(task => {\r\n                task.style.backgroundColor = \"#fff\";\r\n                task.style.color = \"black\";\r\n            })\r\n            \r\n        }\r\n        else{\r\n            missionList.style.backgroundColor = 'hsl(235, 24%, 19%)';\r\n            missionList.style.color = \"#fff\";\r\n            tasks.forEach(task => {\r\n                task.style.backgroundColor = \"hsl(235, 24%, 19%)\";\r\n                task.style.color = \"#fff\";\r\n            })\r\n        }\r\n    }\r\n    changeBackgroundState();\r\n    let key = 0\r\n    return (\r\n        <div className=\"todoList todoTask\" id=\"missionList\">\r\n            <div className=\"taskList\">\r\n                {stateMode.mode === \"all\" && todoList.map(task => {\r\n                    key += 1;\r\n                    return(\r\n                    <div className=\"todo-check fixBorder\" \r\n                    key={`task${key}`}\r\n                    onClick={() => {\r\n                        dispatch(stateChangeTodo(task.id))\r\n                    }}>\r\n                        <img src={task.done ? BoxDone : Box} alt=\"Tick Box\"  \r\n                        className=\"button-check\"\r\n                        />\r\n                        <p className={task.done ? \"mission missionDone\" : \"mission\"}>{task.text}</p>\r\n                    </div>\r\n                    )\r\n                }\r\n                )}\r\n                {stateMode.mode === \"active\" && todoList.map(task => {\r\n                    if(task.done === false){\r\n                        key += 1;\r\n                        return(\r\n                        <div className=\"todo-check fixBorder\" \r\n                        key={`task${key}`}\r\n                        onClick={() => {\r\n                            dispatch(stateChangeTodo(task.id))\r\n                        }}>\r\n                            <img src={task.done ? BoxDone : Box} alt=\"Tick Box\"  \r\n                            className=\"button-check\"\r\n                            />\r\n                            <p className={task.done ? \"mission missionDone\" : \"mission\"}>{task.text}</p>\r\n                        </div>\r\n                        )\r\n                    }\r\n                }\r\n                )}\r\n                {stateMode.mode === \"completed\" && todoList.map(task => {\r\n                    if(task.done){\r\n                        key += 1;\r\n                        return(\r\n                        <div className=\"todo-check fixBorder\" \r\n                        key={`task${key}`}\r\n                        onClick={() => {\r\n                            dispatch(stateChangeTodo(task.id))\r\n                        }}>\r\n                            <img src={task.done ? BoxDone : Box} alt=\"Tick Box\"  \r\n                            className=\"button-check\"\r\n                            />\r\n                            <p className={task.done ? \"mission missionDone\" : \"mission\"}>{task.text}</p>\r\n                        </div>\r\n                        )\r\n                    }\r\n                }\r\n                )}\r\n            </div>\r\n            <TodoListCount />\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}