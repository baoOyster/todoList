{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectNerd\\\\to-do-list\\\\src\\\\Components\\\\TodoInput\\\\TodoInput.js\",\n    _s = $RefreshSig$();\n\nimport Box from '../../images/circle-regular.svg';\nimport { addTodo } from '../Todo/todoSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoInput = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let idCounter = 0;\n  const backgroundState = useSelector(se);\n\n  const createTodo = text => {\n    //sent todo to the store for rendering to mission later \n    dispatch(addTodo({\n      text: text,\n      done: false,\n      id: idCounter + 1\n    }));\n    idCounter += 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-input todo-check\",\n    id: \"todoInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"button-check\",\n      src: Box,\n      alt: \"box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"mission\",\n      type: \"text\",\n      placeholder: \"Create a new todo...\",\n      onKeyDown: e => {\n        if (e.code === \"Enter\") {\n          //checks whether the pressed key is \"Enter\"\n          createTodo(e.target.value);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoInput, \"b981e8asxoRvOfNc5fQNbY8yaRE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["Box","addTodo","useDispatch","useSelector","TodoInput","dispatch","idCounter","backgroundState","se","createTodo","text","done","id","e","code","target","value"],"sources":["D:/projectNerd/to-do-list/src/Components/TodoInput/TodoInput.js"],"sourcesContent":["import Box from '../../images/circle-regular.svg';\r\nimport { addTodo } from '../Todo/todoSlice'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const TodoInput = () => {\r\n    const dispatch = useDispatch();\r\n    let idCounter = 0;\r\n\r\n    const backgroundState = useSelector(se)\r\n\r\n    const createTodo = (text) => { //sent todo to the store for rendering to mission later \r\n        dispatch(addTodo({\r\n            text: text, \r\n            done: false,\r\n            id: idCounter + 1\r\n        }));\r\n        idCounter += 1;\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-input todo-check\" id='todoInput'>\r\n            <img className='button-check' src={Box} alt='box'/>\r\n            <input className='mission' \r\n            type=\"text\" placeholder=\"Create a new todo...\"            \r\n            onKeyDown={e => {\r\n                if (e.code === \"Enter\") {  //checks whether the pressed key is \"Enter\"\r\n                    createTodo(e.target.value);\r\n                }\r\n            }} />\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,iCAAhB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC3B,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,IAAII,SAAS,GAAG,CAAhB;EAEA,MAAMC,eAAe,GAAGJ,WAAW,CAACK,EAAD,CAAnC;;EAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;IAAE;IAC3BL,QAAQ,CAACJ,OAAO,CAAC;MACbS,IAAI,EAAEA,IADO;MAEbC,IAAI,EAAE,KAFO;MAGbC,EAAE,EAAEN,SAAS,GAAG;IAHH,CAAD,CAAR,CAAR;IAKAA,SAAS,IAAI,CAAb;EACH,CAPD;;EASA,oBACI;IAAK,SAAS,EAAC,uBAAf;IAAuC,EAAE,EAAC,WAA1C;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAA8B,GAAG,EAAEN,GAAnC;MAAwC,GAAG,EAAC;IAA5C;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,SAAS,EAAC,SAAjB;MACA,IAAI,EAAC,MADL;MACY,WAAW,EAAC,sBADxB;MAEA,SAAS,EAAEa,CAAC,IAAI;QACZ,IAAIA,CAAC,CAACC,IAAF,KAAW,OAAf,EAAwB;UAAG;UACvBL,UAAU,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV;QACH;MACJ;IAND;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CA3BM;;GAAMZ,S;UACQF,W,EAGOC,W;;;KAJfC,S"},"metadata":{},"sourceType":"module"}