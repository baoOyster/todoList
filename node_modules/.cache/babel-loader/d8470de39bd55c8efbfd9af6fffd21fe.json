{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectNerd\\\\to-do-list\\\\src\\\\Components\\\\TodoList\\\\todoListCount\\\\TodoListCount.js\",\n    _s = $RefreshSig$();\n\n//This is a child of TodoList.js \n//which duty is counting the number of task left\n//And show some filter to filter the task as the user want\nimport { selectLengthCount } from \"../../Todo/todoSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onAll, selectOnShowState } from \"./todoListShowSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoListCount = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const showState = useSelector(selectOnShowState);\n  const remainTask = useSelector(selectLengthCount);\n\n  const selectAll = () => {\n    dispatch(onAll);\n  };\n\n  const selectActive = () => {\n    dispatch(onActive);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoListCount\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"gray\",\n      children: [remainTask, \" items left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showTodo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: showState.all ? \"gray selected\" : \"gray\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: showState.active ? \"gray selected\" : \"gray\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: showState.completed ? \"gray selected\" : \"gray\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"gray\",\n      children: \"Clear Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoListCount, \"myMKpIEQaPzdUqaLNvSYYaHw8KI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TodoListCount;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListCount\");","map":{"version":3,"names":["selectLengthCount","useDispatch","useSelector","onAll","selectOnShowState","TodoListCount","dispatch","showState","remainTask","selectAll","selectActive","onActive","all","active","completed"],"sources":["D:/projectNerd/to-do-list/src/Components/TodoList/todoListCount/TodoListCount.js"],"sourcesContent":["//This is a child of TodoList.js \r\n//which duty is counting the number of task left\r\n//And show some filter to filter the task as the user want\r\nimport { selectLengthCount } from \"../../Todo/todoSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { onAll, selectOnShowState } from \"./todoListShowSlice\";\r\n\r\nexport const TodoListCount = () => {\r\n    const dispatch = useDispatch();\r\n    const showState = useSelector(selectOnShowState);\r\n    const remainTask = useSelector(selectLengthCount);\r\n\r\n    const selectAll = () => {\r\n        dispatch(onAll);\r\n    }\r\n\r\n    const selectActive = () => {\r\n        dispatch(onActive);\r\n    }\r\n\r\n    return (\r\n        <div className=\"todoListCount\">\r\n            <p className=\"gray\">{remainTask} items left</p>\r\n            <div className=\"showTodo\">\r\n                <p className={showState.all ? \"gray selected\" : \"gray\"}>All</p>\r\n                <p className={showState.active ? \"gray selected\" : \"gray\"}>Active</p>\r\n                <p className={showState.completed ? \"gray selected\" : \"gray\"}>Completed</p>\r\n            </div>\r\n            <p className=\"gray\">Clear Completed</p>\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,sBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,iBAAhB,QAAyC,qBAAzC;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC/B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAMM,SAAS,GAAGL,WAAW,CAACE,iBAAD,CAA7B;EACA,MAAMI,UAAU,GAAGN,WAAW,CAACF,iBAAD,CAA9B;;EAEA,MAAMS,SAAS,GAAG,MAAM;IACpBH,QAAQ,CAACH,KAAD,CAAR;EACH,CAFD;;EAIA,MAAMO,YAAY,GAAG,MAAM;IACvBJ,QAAQ,CAACK,QAAD,CAAR;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,wBACI;MAAG,SAAS,EAAC,MAAb;MAAA,WAAqBH,UAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI;QAAG,SAAS,EAAED,SAAS,CAACK,GAAV,GAAgB,eAAhB,GAAkC,MAAhD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAG,SAAS,EAAEL,SAAS,CAACM,MAAV,GAAmB,eAAnB,GAAqC,MAAnD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAG,SAAS,EAAEN,SAAS,CAACO,SAAV,GAAsB,eAAtB,GAAwC,MAAtD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAOI;MAAG,SAAS,EAAC,MAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAxBM;;GAAMT,a;UACQJ,W,EACCC,W,EACCA,W;;;KAHVG,a"},"metadata":{},"sourceType":"module"}